cmake_minimum_required(VERSION 3.13.1)

project(lab1 LANGUAGES C VERSION 0.1.0)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

link_libraries(m)

set(PARALLEL_OPT "")
set(PARALLEL_LOPT "")

set(THREADS 2)
if (CMAKE_C_COMPILER_ID STREQUAL GNU)
    set(PARALLEL_OPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
    set(PARALLEL_LOPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
elseif (CMAKE_C_COMPILER_ID STREQUAL Clang)
    set(PARALLEL_OPT "SHELL:-mllvm -polly" "SHELL:-mllvm -polly-parallel" "SHELL:-mllvm -polly-num-threads=${THREADS}")
    set(PARALLEL_LOPT -lgomp)
elseif (CMAKE_C_COMPILER_ID STREQUAL Intel)
    set(PARALLEL_OPT -parallel -par-threshold=${THREADS})
    set(PARALLEL_LOPT -parallel)
else()
    message(FATAL_ERROR "Unknown compiler " ${CMAKE_C_COMPILER_ID})
endif()

add_executable(lab1-par-${THREADS} main.c)
target_compile_options(lab1-par-${THREADS} PRIVATE -O3 -Wall -Werror ${PARALLEL_OPT})
target_link_options(lab1-par-${THREADS} PRIVATE ${PARALLEL_LOPT})

set(THREADS 4)
if (CMAKE_C_COMPILER_ID STREQUAL GNU)
    set(PARALLEL_OPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
    set(PARALLEL_LOPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
elseif (CMAKE_C_COMPILER_ID STREQUAL Clang)
    set(PARALLEL_OPT "SHELL:-mllvm -polly" "SHELL:-mllvm -polly-parallel" "SHELL:-mllvm -polly-num-threads=${THREADS}")
    set(PARALLEL_LOPT -lgomp)
elseif (CMAKE_C_COMPILER_ID STREQUAL Intel)
    set(PARALLEL_OPT -parallel  -par-threshold=${THREADS})
    set(PARALLEL_LOPT -parallel)
else()
    message(FATAL_ERROR "Unknown compiler " ${CMAKE_C_COMPILER_ID})
endif()

add_executable(lab1-par-${THREADS} main.c)
target_compile_options(lab1-par-${THREADS} PRIVATE -O3 -Wall -Wall -Werror ${PARALLEL_OPT})
target_link_options(lab1-par-${THREADS} PRIVATE ${PARALLEL_LOPT})

set(THREADS 8)
if (CMAKE_C_COMPILER_ID STREQUAL GNU)
    set(PARALLEL_OPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
    set(PARALLEL_LOPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
elseif (CMAKE_C_COMPILER_ID STREQUAL Clang)
    set(PARALLEL_OPT "SHELL:-mllvm -polly" "SHELL:-mllvm -polly-parallel" "SHELL:-mllvm -polly-num-threads=${THREADS}")
    set(PARALLEL_LOPT -lgomp)
elseif (CMAKE_C_COMPILER_ID STREQUAL Intel)
    set(PARALLEL_OPT -parallel  -par-threshold=${THREADS})
    set(PARALLEL_LOPT -parallel)
else()
    message(FATAL_ERROR "Unknown compiler " ${CMAKE_C_COMPILER_ID})
endif()

add_executable(lab1-par-${THREADS} main.c)
target_compile_options(lab1-par-${THREADS} PRIVATE -O3 -Wall -Werror ${PARALLEL_OPT})
target_link_options(lab1-par-${THREADS} PRIVATE ${PARALLEL_LOPT})

set(THREADS 16)
if (CMAKE_C_COMPILER_ID STREQUAL GNU)
    set(PARALLEL_OPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
    set(PARALLEL_LOPT -floop-parallelize-all -ftree-parallelize-loops=${THREADS})
elseif (CMAKE_C_COMPILER_ID STREQUAL Clang)
    set(PARALLEL_OPT "SHELL:-mllvm -polly" "SHELL:-mllvm -polly-parallel" "SHELL:-mllvm -polly-num-threads=${THREADS}")
    set(PARALLEL_LOPT -lgomp)
elseif (CMAKE_C_COMPILER_ID STREQUAL Intel)
    set(PARALLEL_OPT -parallel  -par-threshold=${THREADS})
    set(PARALLEL_LOPT -parallel)
else()
    message(FATAL_ERROR "Unknown compiler " ${CMAKE_C_COMPILER_ID})
endif()

add_executable(lab1-par-${THREADS} main.c)
target_compile_options(lab1-par-${THREADS} PRIVATE -O3 -Wall -Werror ${PARALLEL_OPT})
target_link_options(lab1-par-${THREADS} PRIVATE ${PARALLEL_LOPT})

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
add_executable(lab1-seq main.c)
target_compile_options(lab1-seq PRIVATE -O3 -Wall -Werror)
install(TARGETS lab1-seq lab1-par-2 lab1-par-4 lab1-par-8 lab1-par-16 RUNTIME DESTINATION "bin")

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
