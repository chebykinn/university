
package lab1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonWebService", targetNamespace = "http://lab1.webservices.chebykin.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonWebService {


    /**
     * 
     * @param fieldsAndValues
     * @return
     *     returns java.util.List<lab1.Person>
     * @throws InvalidFilterException
     * @throws SqlException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.GetPersonsResponse")
    public List<Person> getPersons(
        @WebParam(name = "fieldsAndValues", targetNamespace = "")
        PersonFilter fieldsAndValues)
        throws InvalidFilterException, SqlException
    ;

    /**
     * 
     * @param fieldsAndValues
     * @return
     *     returns long
     * @throws SqlException
     * @throws InvalidFilterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPerson", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.AddPerson")
    @ResponseWrapper(localName = "addPersonResponse", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.AddPersonResponse")
    public long addPerson(
        @WebParam(name = "fieldsAndValues", targetNamespace = "")
        PersonFilter fieldsAndValues)
        throws InvalidFilterException, SqlException
    ;

    /**
     * 
     * @param fieldsAndValues
     * @param id
     * @return
     *     returns boolean
     * @throws InvalidFilterException
     * @throws SqlException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.UpdatePersonResponse")
    public boolean updatePerson(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "fieldsAndValues", targetNamespace = "")
        PersonFilter fieldsAndValues)
        throws InvalidFilterException, SqlException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws SqlException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://lab1.webservices.chebykin.org/", className = "lab1.DeletePersonResponse")
    public boolean deletePerson(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws SqlException
    ;

}
